"use strict";(self.webpackChunkfairblock_docusaurus=self.webpackChunkfairblock_docusaurus||[]).push([[4e3],{5259:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>s,default:()=>l,frontMatter:()=>c,metadata:()=>t,toc:()=>o});var r=n(1527),d=n(7214);const c={sidebar_position:3},s="ShareGenerator",t={id:"advanced/share_generator",title:"ShareGenerator",description:"ShareGenerator is a binary for generating & deriving keyshares, mainly for a local development / testing environment.",source:"@site/docs/advanced/share_generator.md",sourceDirName:"advanced",slug:"/advanced/share_generator",permalink:"/docs/advanced/share_generator",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Encrypt transactions for x/pep module",permalink:"/docs/advanced/encrypt_tx"},next:{title:"fairyport",permalink:"/docs/advanced/fairyport"}},i={},o=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Generate shares",id:"generate-shares",level:3},{value:"Derive keyshare for a specific ID",id:"derive-keyshare-for-a-specific-id",level:3}];function h(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"sharegenerator",children:(0,r.jsx)(a.code,{children:"ShareGenerator"})}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.code,{children:"ShareGenerator"})," is a binary for generating & deriving keyshares, mainly for a local development / testing environment.\nIt can generate valid key shares, commitments and master public keys while also providing functionality to derive keyshares for a specific ID.\nDevelopers can use this binary to test the encryption, decryption and key aggregation processes on ",(0,r.jsx)(a.code,{children:"fairyring"}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["This tutorial explains how to install and run the ",(0,r.jsx)(a.code,{children:"ShareGenerator"}),".\nMake sure you have completed the steps in the ",(0,r.jsx)(a.a,{href:"/docs/running-a-node/prerequisites",children:"prerequisites"})," prior to following the instructions below."]}),"\n",(0,r.jsx)(a.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"cd $HOME\ngit clone https://github.com/Fairblock/ShareGenerator.git\ncd ShareGenerator\ngo mod tidy\ngo install\n"})}),"\n",(0,r.jsx)(a.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(a.h3,{id:"generate-shares",children:"Generate shares"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"ShareGenerator generate [number-of-shares] [threshold]\n"})}),"\n",(0,r.jsx)(a.p,{children:"Example on generating 1 keyshare with threshold 1:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:'ShareGenerator generate 1 1 | jq\n{\n  "Shares": [\n    {\n      "Value": "4fcc919fbbac7ddca4be891bc0ee6afd02a3dfe3acee206d7ee1bfba42abeba6",\n      "Index": 1\n    }\n  ],\n  "MasterPublicKey": "820b2db6e86aabed93b3aa18e1a7416434f5a0d87b3fdba20a3ccd331472dc4285e4b10d0ca8f3e340924c2b858df5d1",\n  "Commitments": ["820b2db6e86aabed93b3aa18e1a7416434f5a0d87b3fdba20a3ccd331472dc4285e4b10d0ca8f3e340924c2b858df5d1"\n  ]\n}\n'})}),"\n",(0,r.jsx)(a.h3,{id:"derive-keyshare-for-a-specific-id",children:"Derive keyshare for a specific ID"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"ShareGenerator derive [share-in-hex] [share-index] [ID]\n"})}),"\n",(0,r.jsxs)(a.p,{children:["You can get the ",(0,r.jsx)(a.code,{children:"[share-in-hex]"})," & ",(0,r.jsx)(a.code,{children:"[share-index]"})," from the ",(0,r.jsx)(a.code,{children:"generate"})," command, here is an example on the deriving the keyshare above for ID ",(0,r.jsx)(a.code,{children:"100"}),":"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:'ShareGenerator derive 4fcc919fbbac7ddca4be891bc0ee6afd02a3dfe3acee206d7ee1bfba42abeba6 1 100 | jq\n{\n  "KeyShare": "93096b31b1af2728a8d82cf5b27eead2d802e229b8fb7597e47702d691ee65d271cf2f6c4728f8aee0bc042636b2c86400d721d2355aeb307b88906b9e403025bb8566a4adc58b1c412cf11fab8ed9cd357ebbaa1db5f2deb31327c7b901e1ec",\n  "Commitment": "820b2db6e86aabed93b3aa18e1a7416434f5a0d87b3fdba20a3ccd331472dc4285e4b10d0ca8f3e340924c2b858df5d1"\n}\n'})}),"\n",(0,r.jsx)(a.p,{children:"The ID does not need to be a number, it can also be a string:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:'ShareGenerator derive 4fcc919fbbac7ddca4be891bc0ee6afd02a3dfe3acee206d7ee1bfba42abeba6 1 "target_id" | jq\n{\n  "KeyShare": "a7348fb8cf57c1adf655f8d27c79086a5fd356285a6f00c9aea05ea6d2a8da63e08ea27d10d91b83be0778fc652d9c920ed18690f5e776ec3fb57e2504949bbe31deef8648c488263d871f040d5d2781068a3c2f78b057fef57397310367fb7d",\n  "Commitment": "820b2db6e86aabed93b3aa18e1a7416434f5a0d87b3fdba20a3ccd331472dc4285e4b10d0ca8f3e340924c2b858df5d1"\n}\n'})})]})}function l(e={}){const{wrapper:a}={...(0,d.a)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},7214:(e,a,n)=>{n.d(a,{Z:()=>t,a:()=>s});var r=n(959);const d={},c=r.createContext(d);function s(e){const a=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),r.createElement(c.Provider,{value:a},e.children)}}}]);