"use strict";(self.webpackChunkfairblock_docusaurus=self.webpackChunkfairblock_docusaurus||[]).push([[5572],{6263:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var t=r(1527),i=r(7214);const s={sidebar_position:5},a="ShareGenerationClient",o={id:"running-a-node/share_generation_client",title:"ShareGenerationClient",description:"The ShareGenerationClient is currently responsible for performing verifiable secret sharing for keyshares.",source:"@site/docs/running-a-node/share_generation_client.md",sourceDirName:"running-a-node",slug:"/running-a-node/share_generation_client",permalink:"/docs/running-a-node/share_generation_client",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Submitting keyshares to fairyring",permalink:"/docs/running-a-node/submit_keyshare"},next:{title:"Metrics",permalink:"/docs/running-a-node/metrics"}},d={},c=[{value:"Getting Encrypted Key Share &amp; Public Key",id:"getting-encrypted-key-share--public-key",level:2},{value:"Example Output",id:"example-output",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"sharegenerationclient",children:(0,t.jsx)(n.code,{children:"ShareGenerationClient"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ShareGenerationClient"})," is currently responsible for performing verifiable secret sharing for keyshares.\nKeyshares will be rotated every ",(0,t.jsx)(n.code,{children:"N"})," blocks meaning that the master public key (used for encrypting transactions),\nkeyshares and keyshare commitments (used for submitting to ",(0,t.jsx)(n.code,{children:"fairyring"}),") will be different every round.\nThe keyshares submitted to fairyring are encrypted with the public key of registered validators.\nThe master public key will also be submitted to ",(0,t.jsx)(n.code,{children:"fairyring"})," (along with keyshare commitments and number of validators) at the beginning of every round."]}),"\n",(0,t.jsx)(n.p,{children:"This tutorial explains how to interact with fairyring to get the encrypted key shares."}),"\n",(0,t.jsx)(n.h2,{id:"getting-encrypted-key-share--public-key",children:"Getting Encrypted Key Share & Public Key"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"fairyringd q keyshare show-active-pub-key -o json | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Fetches all encrypted keyshares & public key for the current & next round."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Keep in mind that the keyshare will be rotated every ",(0,t.jsx)(n.code,{children:"N"})," blocks. Make sure to send the share request every ",(0,t.jsx)(n.code,{children:"N"})," blocks for the latest keyshare."]})}),"\n",(0,t.jsx)(n.h3,{id:"example-output",children:"Example Output"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "activePubKey": {\n    "publicKey": "91efe43e750ed1290a2ffe18a2ad4263587fe09cdd50476ce9e819ad85b754d9998b8f3c5615db6424b1361c7c3a31d5",\n    "creator": "fairy10tq25z63m3fedlwmtssf5g5qzh9zsjswvmcxc9",\n    "expiry": "55",\n    "numberOfValidators": "1",\n    "encryptedKeyShares": [\n      {\n        "data": "sN+aiOYCJRrqzdumder0uALKACAcTbu9pILB82reU1vHdp6rl3wol0OFuAomIZXoafE3JQAgZ+RYrmxxCjd7uoJuKo+AgZXD0FQ2RE/vYWIP39+J8VO5yrbtrZ9DddfcNCBEoQuRNkieEUyyl1hAckXanPMR+CzF343AGioVlS5PVli+4ry2QNQK8ZLQUW5ILKHbbZGInd7eQ/79DjsBPI4U5m/KLQ==",\n        "validator": "fairy18hl5c9xn5dze2g50uaw0l2mr02ew57zkynp0td"\n      }\n    ]\n  },\n  "queuedPubKey": {\n    "publicKey": "8d16c3f9a799db33aae1891fbeceab3ae810a9da3af513f5e4afb4236f07dea7685246675909eb5c5f65720ad8deb646",\n    "creator": "fairy10tq25z63m3fedlwmtssf5g5qzh9zsjswvmcxc9",\n    "expiry": "105",\n    "numberOfValidators": "1",\n    "encryptedKeyShares": [\n      {\n        "data": "rJBNYnOA1BK0Cot4YT3bCgLKACBYO5CpT2UM5QWWf7h9qAq88eEEZIbM/iYzgyiBZoz63QAgbXtaLkZHqsY0IKeFfpbK+pNPuYXIJsH3pRe0vYSgo1VDTx/FbEVlt4WhW/w1nsyaX17ymLeGem1Hj/izu4IqBayeUOVHioiswDbRu2OSyliwbx09iRaQfISBKWseHcuEKQTWtfp6KZdd/GfP3C7k8Q==",\n        "validator": "fairy18hl5c9xn5dze2g50uaw0l2mr02ew57zkynp0td"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"activePubKey"})," is the key shares and public key data for the current round"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"queuedPubKey"})," is the key shares and public key data for the next round"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"publicKey"}),", the public key / encryption key for the given round."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"creator"})," is the creator address of the round"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"expiry"}),", block number of the key shares expires."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"numberOfValidators"})," total number of validators for the round."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encryptedKeyShares.data"}),", keyshare encrypted with ",(0,t.jsx)(n.code,{children:"encryptedKeyShares.validator"})," validator public key."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},7214:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>a});var t=r(959);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);