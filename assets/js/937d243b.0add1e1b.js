"use strict";(self.webpackChunkfairblock_docusaurus=self.webpackChunkfairblock_docusaurus||[]).push([[4891],{242:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>a});var i=r(1527),t=r(7214);const o={sidebar_position:4},s="fairyport",d={id:"advanced/fairyport",title:"fairyport",description:"fairyport is an off-chain service for sending aggregated keyshares to destination chains from fairyring.",source:"@site/docs/advanced/fairyport.md",sourceDirName:"advanced",slug:"/advanced/fairyport",permalink:"/docs/advanced/fairyport",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"ShareGenerator",permalink:"/docs/advanced/share_generator"},next:{title:"Conditional Encryption/Decryption",permalink:"/docs/advanced/conditional_encryption_decryption"}},c={},a=[{value:"Install <code>fairyport</code>",id:"install-fairyport",level:2},{value:"Setup <code>fairyport</code>",id:"setup-fairyport",level:2},{value:"Start <code>fairyport</code>",id:"start-fairyport",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"fairyport",children:(0,i.jsx)(n.code,{children:"fairyport"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"fairyport"})," is an off-chain service for sending aggregated keyshares to destination chains from ",(0,i.jsx)(n.code,{children:"fairyring"}),".\nThis tutorial explains how to setup and run ",(0,i.jsx)(n.code,{children:"fairyport"}),".\nEnsure you have followed the ",(0,i.jsx)(n.a,{href:"https://github.com/Fairblock/docs/blob/main/docs/running-a-node/prerequisites.md",children:"prerequisites"})," and installed the ",(0,i.jsxs)(n.a,{href:"https://github.com/Fairblock/docs/blob/main/docs/running-a-node/installation.md",children:[(0,i.jsx)(n.code,{children:"fairyring"})," binary"]})," prior to following the instructions below."]}),"\n",(0,i.jsxs)(n.h2,{id:"install-fairyport",children:["Install ",(0,i.jsx)(n.code,{children:"fairyport"})]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Cloning the repository:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd $HOME\ngit clone https://github.com/Fairblock/fairyport.git\ncd fairyport\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.code,{children:"fairyport"})," binary:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"go mod tidy\ngo install\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"setup-fairyport",children:["Setup ",(0,i.jsx)(n.code,{children:"fairyport"})]}),"\n",(0,i.jsxs)(n.p,{children:["Initialize ",(0,i.jsx)(n.code,{children:"fairyport"})," config:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"fairyport init\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"init"})," command create a default config ",(0,i.jsx)(n.code,{children:"config.yml"})," in the default directory ",(0,i.jsx)(n.code,{children:"$HOME/.fairyport"})," . The config looks like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:"FairyRingNode:\n    grpcport: 9090\n    ip: 127.0.0.1\n    port: 26657\n    protocol: rpc\nDestinationNode:\n    grpcport: 9090\n    ip: 127.0.0.1\n    port: 26657\n    protocol: rpc\nMnemonic: '# mnemonic'\n"})}),"\n",(0,i.jsx)(n.p,{children:"Detailed explanation on the config:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"FairyRingNode"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Option"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ip"}),(0,i.jsx)(n.td,{children:"The IP address that Fairy Ring Node will use."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"port"}),(0,i.jsx)(n.td,{children:"The port that Fairy Ring Node will use for TendermintRPC"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"protocol"}),(0,i.jsx)(n.td,{children:"The protocol used for communication via the TendermintRPC"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"grpcport"}),(0,i.jsx)(n.td,{children:"The port that Fairy Ring Node will use for gRPC communication with other nodes."})]})]})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"DestinationNode"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Option"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ip"}),(0,i.jsx)(n.td,{children:"The IP address that Destination Node will use."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"port"}),(0,i.jsx)(n.td,{children:"The port that Destination Node will use for TendermintRPC"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"protocol"}),(0,i.jsx)(n.td,{children:"The protocol used for communication via the TendermintRPC"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"grpcport"}),(0,i.jsx)(n.td,{children:"The port that Destination Node will use for gRPC communication with other nodes."})]})]})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Mnemonic"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Option"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Mnemonic"}),(0,i.jsx)(n.td,{children:"The seed phrase used to generate the private key for the account responsible for making transactions to the Destination Chain"})]})})]}),"\n",(0,i.jsxs)(n.p,{children:["Update the node ip and ports for ",(0,i.jsx)(n.code,{children:"fairyport"})," to connect to and ",(0,i.jsx)(n.code,{children:"Mnemonic"})," to your mnemonic phase.\nNote that ",(0,i.jsx)(n.code,{children:"fairyport"})," derives your address with path ",(0,i.jsx)(n.code,{children:"m/44'/118'/0'/0/0"})," by default."]}),"\n",(0,i.jsx)(n.p,{children:"The updated config should looks like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'FairyRingNode:\n  ip: "127.0.0.1"\n  port: 26657\n  protocol: "tcp"\n  grpcport: 9090\n\nDestinationNode:\n  ip: "127.0.0.1"\n  port: 26659\n  protocol: "tcp"\n  grpcport: 9092\n\nMnemonic: "banana unusual correct orange dwarf fortune tennis sell primary giggle canal ask fish movie loud elite region glory session wonder frozen clap mountain barrel"\n'})}),"\n",(0,i.jsxs)(n.h2,{id:"start-fairyport",children:["Start ",(0,i.jsx)(n.code,{children:"fairyport"})]}),"\n",(0,i.jsxs)(n.p,{children:["After you setup ",(0,i.jsx)(n.code,{children:"fairyport"}),", you can start running ",(0,i.jsx)(n.code,{children:"fairyport"})," by:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"fairyport start --config $HOME/.fairyport/config.yml\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},7214:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>s});var i=r(959);const t={},o=i.createContext(t);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);