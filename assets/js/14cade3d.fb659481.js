"use strict";(self.webpackChunkfairblock_docusaurus=self.webpackChunkfairblock_docusaurus||[]).push([[7141],{7546:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>d});var r=s(1527),i=s(7214);const t={sidebar_position:2},o="Encrypt transactions for x/pep module",c={id:"advanced/encrypt_tx",title:"Encrypt transactions for x/pep module",description:"This tutorial explains how to encrypt your transaction for x/pep module using encrypter.",source:"@site/docs/advanced/encrypt_tx.md",sourceDirName:"advanced",slug:"/advanced/encrypt_tx",permalink:"/docs/advanced/encrypt_tx",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"pep_module",permalink:"/docs/advanced/pep_module"},next:{title:"ShareGenerator",permalink:"/docs/advanced/share_generator"}},a={},d=[{value:"Install <code>encrypter</code>",id:"install-encrypter",level:2},{value:"Encrypt your transaction",id:"encrypt-your-transaction",level:2}];function l(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.h1,{id:"encrypt-transactions-for-xpep-module",children:["Encrypt transactions for ",(0,r.jsx)(e.code,{children:"x/pep"})," module"]}),"\n",(0,r.jsxs)(e.p,{children:["This tutorial explains how to encrypt your transaction for ",(0,r.jsx)(e.code,{children:"x/pep"})," module using ",(0,r.jsx)(e.a,{href:"https://github.com/Fairblock/encrypter",children:(0,r.jsx)(e.code,{children:"encrypter"})}),".\nEnsure you have followed the ",(0,r.jsx)(e.a,{href:"/docs/running-a-node/prerequisites",children:"prerequisites"})," and installed the ",(0,r.jsxs)(e.a,{href:"/docs/running-a-node/installation",children:[(0,r.jsx)(e.code,{children:"fairyring"})," binary"]}),"\nprior to following the instructions below."]}),"\n",(0,r.jsxs)(e.h2,{id:"install-encrypter",children:["Install ",(0,r.jsx)(e.code,{children:"encrypter"})]}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Cloning the repository:"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"cd $HOME\ngit clone https://github.com/Fairblock/encrypter.git\ncd encrypter\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsxs)(e.li,{children:["Install ",(0,r.jsx)(e.code,{children:"encrypter"})," binary"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"go mod tidy\ngo install\n"})}),"\n",(0,r.jsx)(e.h2,{id:"encrypt-your-transaction",children:"Encrypt your transaction"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Getting the public key for encryption"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"PUBKEY=$(fairyringd query pep show-active-pub-key | jq -r '.activePubKey.publicKey')\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsx)(e.li,{children:"Create the signed transaction. We'll use a bank send transaction in this example."}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"fairyringd tx bank send [FROM_ADDRESS] [TO_ADDRESS] [AMOUNT] --from [YOUR_ACCOUNT_NAME] --gas-prices 1ufairy --generate-only -o json -y > unsigned.json\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"[FROM_ADDRESS]"})," is the address you are using to send the token."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"[TO_ADDRESS]"})," is the recipient address."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"[AMOUNT]"})," is the amount you would like to send."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"[YOUR_ACCOUNT_NAME]"})," is the account name of your ",(0,r.jsx)(e.code,{children:"[FROM_ADDRESS]"}),"."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"--gas-prices"})," is the gas price you are paying."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"--generate-only"})," means you only generate the unsigned transaction."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"-o json"})," means to output the unsigned transaction in ",(0,r.jsx)(e.code,{children:"json"})," format."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"> unsigned.json"})," means outputs the unsigned transaction to a file named ",(0,r.jsx)(e.code,{children:"unsigned.json"}),"."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Example:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"fairyringd tx bank send fairy18hl5c9xn5dze2g50uaw0l2mr02ew57zkynp0td fairy1qnk2n4nlkpw9xfqntladh74w6ujtulwnsgww3g 100ufairy --from alice --gas-prices 1ufairy --generate-only -o json -y > unsigned.json\n"})}),"\n",(0,r.jsxs)(e.p,{children:["This corresponds to a transaction that sends ",(0,r.jsx)(e.code,{children:"100ufairy"})," from ",(0,r.jsx)(e.code,{children:"alice"})," (",(0,r.jsx)(e.code,{children:"fairy18hl5c9xn5dze2g50uaw0l2mr02ew57zkynp0td"}),") to ",(0,r.jsx)(e.code,{children:"fairy1qnk2n4nlkpw9xfqntladh74w6ujtulwnsgww3g"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["The ",(0,r.jsx)(e.code,{children:"unsigned.json"})," looks something like this:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n "body": {\n  "messages": [\n   {\n    "@type": "/cosmos.bank.v1beta1.MsgSend",\n    "from_address": "fairy18hl5c9xn5dze2g50uaw0l2mr02ew57zkynp0td",\n    "to_address": "fairy1qnk2n4nlkpw9xfqntladh74w6ujtulwnsgww3g",\n    "amount": [{ "denom": "ufairy", "amount": "100" }]\n   }\n  ],\n  "memo": "",\n  "timeout_height": "0",\n  "extension_options": [],\n  "non_critical_extension_options": []\n },\n "auth_info": {\n  "signer_infos": [],\n  "fee": {\n   "amount": [{ "denom": "ufairy", "amount": "200000" }],\n   "gas_limit": "200000",\n   "payer": "",\n   "granter": ""\n  },\n  "tip": null\n },\n "signatures": []\n}\n'})}),"\n",(0,r.jsxs)(e.ol,{start:"3",children:["\n",(0,r.jsx)(e.li,{children:"Signing the transaction"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"SIGNED=$(fairyringd tx sign unsigned.json --from [ACCOUNT_NAME] --offline \\\n--account-number $(fairyringd query account $(fairyringd keys show [ACCOUNT_NAME] -a) -o json | jq -r '.account_number') \\\n--sequence $(fairyringd query pep show-pep-nonce $(fairyringd keys show [ACCOUNT_NAME] -a) -o json | jq -r '.pepNonce.nonce'))\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"[ACCOUNT_NAME]"})," replace all instances to the account name you are using to sign the transaction."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"--offline"})," means that you are signing your transaction offline with the provided account number & sequence instead of fetching it from the chain."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"--account-number"})," is your account number, the command above will fetch it for you automatically."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"--sequence"})," is the ",(0,r.jsx)(e.strong,{children:"pep nonce"})," of your address, the command above will fetch it for you automatically."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Example:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"SIGNED=$(fairyringd tx sign unsigned.json --from alice --offline \\\n--account-number $(fairyringd query account $(fairyringd keys show alice -a) -o json | jq -r '.account_number') \\\n--sequence $(fairyringd query pep show-pep-nonce $(fairyringd keys show alice -a) -o json | jq -r '.pepNonce.nonce'))\n"})}),"\n",(0,r.jsx)(e.p,{children:"The signed transaction looks like this:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n "body": {\n  "messages": [\n   {\n    "@type": "/cosmos.bank.v1beta1.MsgSend",\n    "from_address": "fairy18hl5c9xn5dze2g50uaw0l2mr02ew57zkynp0td",\n    "to_address": "fairy1qnk2n4nlkpw9xfqntladh74w6ujtulwnsgww3g",\n    "amount": [{ "denom": "ufairy", "amount": "100" }]\n   }\n  ],\n  "memo": "",\n  "timeout_height": "0",\n  "extension_options": [],\n  "non_critical_extension_options": []\n },\n "auth_info": {\n  "signer_infos": [\n   {\n    "public_key": {\n     "@type": "/cosmos.crypto.secp256k1.PubKey",\n     "key": "A3wiGqD+PZYB+hgRmWbD3Sugv2Ofw3G7rFjT0PJ7SBIZ"\n    },\n    "mode_info": { "single": { "mode": "SIGN_MODE_DIRECT" } },\n    "sequence": "3"\n   }\n  ],\n  "fee": {\n   "amount": [{ "denom": "ufairy", "amount": "200000" }],\n   "gas_limit": "200000",\n   "payer": "",\n   "granter": ""\n  },\n  "tip": null\n },\n "signatures": [\n  "vmPWsuAsasg...10Ad2QafEByg2q0zug=="\n ]\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"You can check your signed transaction with the following command:"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"echo $SIGNED | jq"})}),"\n",(0,r.jsxs)(e.ol,{start:"4",children:["\n",(0,r.jsx)(e.li,{children:"Encrypting the transaction"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"ENCRYPTED=$(encrypter [TARGET_HEIGHT] $PUBKEY $SIGNED)\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"[TARGET_HEIGHT]"})," is the target execution height of your transaction, it will also be used when you submit the encrypted transaction."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"$PUBKEY"})," is the public key (encryption key) you got from Step 1."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"$SIGNED"})," is the signed transaction from Step 3."]}),"\n"]}),"\n",(0,r.jsxs)(e.ol,{start:"5",children:["\n",(0,r.jsx)(e.li,{children:"Check the encrypted transaction by:"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"echo $ENCRYPTED"})}),"\n",(0,r.jsxs)(e.ol,{start:"6",children:["\n",(0,r.jsx)(e.li,{children:"Submit the encrypted transaction"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"fairyringd tx pep submit-encrypted-tx $ENCRYPTED [TARGET_HEIGHT] --from [ACCOUNT_NAME] --gas-prices 1ufairy -y\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"$ENCRYPTED"})," is the hex encoded encrypted tx from ",(0,r.jsx)(e.code,{children:"encrypter"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"[TARGET_HEIGHT]"})," is the target execution height of your transaction. This should be the same as the ",(0,r.jsx)(e.code,{children:"[TARGET_HEIGHT]"})," used when encrypting the transaction using ",(0,r.jsx)(e.code,{children:"encrypter"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"[ACCOUNT_NAME]"})," is the account you would like to send the transaction from. This should be the same as the account you used to sign the transaction."]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}},7214:(n,e,s)=>{s.d(e,{Z:()=>c,a:()=>o});var r=s(959);const i={},t=r.createContext(i);function o(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);