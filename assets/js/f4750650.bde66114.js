"use strict";(self.webpackChunkfairblock_docusaurus=self.webpackChunkfairblock_docusaurus||[]).push([[8841],{3729:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var i=t(1527),r=t(7214);const s={sidebar_position:3},a="Public Keys and Encrypting Transactions",c={id:"learn/v1_details/network/pub_keys_and_encryption",title:"Public Keys and Encrypting Transactions",description:"Public Keys",source:"@site/docs/learn/v1_details/network/pub_keys_and_encryption.md",sourceDirName:"learn/v1_details/network",slug:"/learn/v1_details/network/pub_keys_and_encryption",permalink:"/docs/learn/v1_details/network/pub_keys_and_encryption",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"v1 Network",permalink:"/docs/learn/v1_details/network/"},next:{title:"Keyshares and Aggregation",permalink:"/docs/learn/v1_details/network/keyshares_and_aggregation"}},o={},d=[{value:"Public Keys",id:"public-keys",level:2},{value:"Encrypting Transactions",id:"encrypting-transactions",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"public-keys-and-encrypting-transactions",children:"Public Keys and Encrypting Transactions"}),"\n",(0,i.jsx)(n.h2,{id:"public-keys",children:"Public Keys"}),"\n",(0,i.jsxs)(n.p,{children:["Users encrypt their transactions using a master public key (MPK) and then choose the condition for decryption (the ID).\n",(0,i.jsx)(n.code,{children:"fairyring"})," maintains at most two MPKs at any given time: an ",(0,i.jsx)(n.code,{children:"ActivePubKey"}),"\xa0and a\xa0",(0,i.jsx)(n.code,{children:"QueuedPubKey"}),".\nBoth kinds of MPKs are submitted to the network with expiry block heights. These expiry block heights mark the end of epochs.\nThe\xa0",(0,i.jsx)(n.code,{children:"ActivePubKey"}),"\xa0is the one currently being used for encrypting transactions.\nThe\xa0",(0,i.jsx)(n.code,{children:"QueuedPubKey"}),", as the name suggests, is an MPK that will replace the\xa0",(0,i.jsx)(n.code,{children:"ActivePubKey"}),"\xa0once the current\xa0",(0,i.jsx)(n.code,{children:"ActivePubKey"}),"\xa0expires.\nActive and Queued MPKs are generated and replaced at the end of epochs, which are encoded block heights for MPK generation and renewal."]}),"\n",(0,i.jsx)(n.h2,{id:"encrypting-transactions",children:"Encrypting Transactions"}),"\n",(0,i.jsxs)(n.p,{children:["Unlike normal transactions, encrypted transactions work a bit differently.\nUsers can encrypt any transaction with the current ",(0,i.jsx)(n.code,{children:"ActivePubKey"}),".\nThe user must also specify the target block height of ",(0,i.jsx)(n.code,{children:"fairyring"})," (condition) at which the transaction is to be executed on the chain the transaction resides on.\nThe submitted encrypted transaction then resides in the ",(0,i.jsx)(n.a,{href:"../advanced/pep_module.md",children:(0,i.jsx)(n.code,{children:"x/pep"})})," module of the destination chain."]}),"\n",(0,i.jsxs)(n.p,{children:["For more details, refer to ",(0,i.jsx)(n.a,{href:"../advanced/encrypt_tx.md",children:"this tutorial"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},7214:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>a});var i=t(959);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);