"use strict";(self.webpackChunkfairblock_docusaurus=self.webpackChunkfairblock_docusaurus||[]).push([[1975],{5499:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var t=n(1527),o=n(7214);const a={sidebar_position:0},r="Build Farther with the Dynamic Confidentiality Network",c={id:"welcome/welcome_to_fairblock",title:"Build Farther with the Dynamic Confidentiality Network",description:"Fairblock is a dynamic confidentiality network that delivers high performance, low overhead, and custom confidential execution to blockchain applications. Dynamic confidentiality unlocks the encrypted economy \u2014 onchain applications designed for real-world use cases, like optimizable financial markets, competitive PVP markets like auctions, predictions, and gaming, and privacy-preserving inference.",source:"@site/docs/welcome/welcome_to_fairblock.md",sourceDirName:"welcome",slug:"/welcome/welcome_to_fairblock",permalink:"/docs/welcome/welcome_to_fairblock",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",next:{title:"Vision Statement",permalink:"/docs/welcome/Vision"}},s={},l=[];function d(e){const i={h1:"h1",li:"li",ol:"ol",p:"p",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"build-farther-with-the-dynamic-confidentiality-network",children:"Build Farther with the Dynamic Confidentiality Network"}),"\n",(0,t.jsx)(i.p,{children:"Fairblock is a dynamic confidentiality network that delivers high performance, low overhead, and custom confidential execution to blockchain applications. Dynamic confidentiality unlocks the encrypted economy \u2014 onchain applications designed for real-world use cases, like optimizable financial markets, competitive PVP markets like auctions, predictions, and gaming, and privacy-preserving inference."}),"\n",(0,t.jsx)(i.p,{children:"V1 is live on testnet with bespoke MPEC and threshold identity-based encryption, which offer conditional confidentiality dependent on users\u2019 needs. Two core functions are possible today:"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"Export confidential computation for external chains and applications."}),"\n",(0,t.jsx)(i.li,{children:"Host native applications only possible with confidentiality."}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Our V2 will support more dynamicity for confidentiality solutions such as computation over encrypted data, private input verification, and proxy reencryption."}),"\n",(0,t.jsx)(i.p,{children:"These docs will provide instructions for:"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"Integrating threshold decryption and randomness from Fairblock in applications on FairyRing, Arbitrum and EVM chains, or Cosmos SDK-based chains."}),"\n",(0,t.jsx)(i.li,{children:"Validators supporting the Fairblock chain, Fairyring."}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},7214:(e,i,n)=>{n.d(i,{Z:()=>c,a:()=>r});var t=n(959);const o={},a=t.createContext(o);function r(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);